
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read their own profile and can only write to their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Rules for the 'gigs' collection
    match /gigs/{gigId} {
      // Allow any authenticated user to get a single gig or list all gigs.
      allow get, list: if request.auth != null;
      
      // Only allow users with an 'organizer' role to create gigs.
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'organizer';
      
      // Only allow the original organizer to update or delete their own gig.
      allow update, delete: if request.auth != null && resource.data.organizerId == request.auth.uid;
    }

    // Rules for the 'events' collection
    match /events/{eventId} {
       // Allow any authenticated user to get a single event or list all events.
      allow get, list: if request.auth != null;

      // Only allow users with an 'organizer' role to create events.
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'organizer';
      
      // Only allow the original organizer to update or delete their own event.
      allow update, delete: if request.auth != null && resource.data.organizerId == request.auth.uid;
    }
  }
}
